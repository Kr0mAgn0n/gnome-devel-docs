%h1
  GNOME 3 Design Principles
.note
  This is draft content for the next version of GNOME Design.

%p
  These design principles describe the high-level aims and strategies that should be followed when designing a GNOME 3 application.

%h2 
  Give each window or view a clear focus

%p
  Every extra piece of information or interface control competes with what is truly relevant to the user and distracts them from important information, so don't clutter your interface and don't overload it with buttons, icons, or irrelevant information.

%p
  Break down your application into different activities and provide a different, dedicated view for each one. There might be a browsing view and a reading view, for example. Dividing your application in this way will make it easy and satisfying to use.

If a control or information is not essential for a view, do not include it.

%h2
  Require as little user input as possible

%p
  An application that is laborious to use can become the source of irritation, so strive to make your software work for your users, not the other way around.

%p
  Reduce the number of button presses and other forms of input that your application requires, and avoid mandatory configuration steps if you can. Make your application be as automatic as possible; manual 'management' functionality should not be necessary for the vast majority of applications.

%h2
  Prioritise and elevate content

.columns
  =img "test-image.png", :class => "rimage"

  %p
    Content can take many forms, including text, video, images and sound. People care about content and it is what they are interested in, so take care to present content in the best possible way, so that it can be experienced and enjoyed with ease.
 
  %p
    Ensure that content takes center stage in your application by positioning it prominently and by not distracting attention from it with superfluous interface elements.

  %p
    It is easy to overload a view with too much content, so be selective about how much you present at any one time. Resist the temptation to include  information just because you have access to it (this is particularly important when presenting text and metadata): instead, think about what is useful and important to users.

  =img "test-image.png", :class => "rimage"

  %p
    You might want to provide a dedicated view for displaying or working with individual items of content.

  %p
    Finally, ensure that you present visual content in order to make it look as good as possible. Follow the guidance on color and layout, and consider using the [[Design/HIG/DarkTheme|dark application theme]].

%h2
  Don’t interrupt the user

Nobody likes being interrupted, particularly if the interruption demands something from them. A key principal of GNOME 3 is to avoid interrupting users when they are focused on a task.

Remember that the job of your application is to work for the people that use it. It should stay out of the way when it is not required but be on hand when needed.

Use system notifications with restraint and make effective use of the different types of GNOME 3 notifications. You should also avoid confirmation dialogs where possible. These break someone's flow and can become a source of irritation. Instead, offer the opportunity to [[Design/HIG/Undo|undo]] destructive actions.

%h2
  Go beyond the local

People's content is increasingly located online, as are many of the services that are important to them. Think about how you can enable them to connect with these services and content through your application.

This enables them to access the same things across a range of devices, and it facilitates sharing and collaboration. When designing your application, think beyond the local from the very beginning and consider incorporating online services and content. This will enable you to provide truely social experiences.

If your application uses online facilities, you may be able to take advantage of GNOME Online Accounts.

%h2
  Reduce the presence of windows

Windows produce a number of management tasks that create work for people wanting to use your application. Reducing the presence of windows that need managing means that applications involve less work, make the full use of the screen space that is available to them, and that provide a seamless experience.  

Your application's [[Design/HIG/PrimaryWindows|primary windows]] should typically be maximized by default and their title bars hidden. Multiple views can be used to replace the need for several windows.

%h2
  Create a clear hierarchy

People ‘read’ an interface from top to bottom. Within each view or window, you should order your interface elements according to this movement. Place interface elements according to when they should be encountered, so that elements that need to be read first are placed above other elements. Placing headings above the content that they describe is one obvious example of this.

Interface elements should also be positioned according to their dominance in the view or window. Controls should be placed above and to the left of other controls or content that they have an affect on: filter buttons and search boxes should be found above the content that they control, for example. Placing elements in this order makes their importance and function clear to people using your application.

%h2
  Don’t make people burrow too deep

Following a path through successive layers of interfaces can be confusing. Avoid locating functionality within deeply nested navigation points, such as multiple windows or views, by keeping navigation structures shallow.

Always make it easy for users to find their way back to where they started. You can do this by using back buttons consistently when providing multiple views. Home buttons, such as those found within the System Settings panel and Web application can also be used.

%h2
  Facilitate sociability

Functionality that allows people to share content and communicate with others is highly attractive, and is something that is expected from a high quality piece of software. 

If your application handles content, consider adding sharing and sending actions so that people can pass it on it to their friends, family and colleagues. Since these actions are important, you might want to make them prominent in your user interface. The core GNOME 3 applications utilise design patterns that can be used for this purpose.

%h2
  Make it beautiful

Appearances matter - beautiful things bring joy and happiness, and people will enjoy using your application more if it looks good.

Generally, an application that is easy to use and understand will also look good, and many of the other design guidelines will help you to produce a beautiful design. However, take the time to ensure that the controls and information you present create a harmoneous and balanced appearance.

Reproduce the standard GNOME 3 layouts and color schemes. Ensure that you use the default GNOME icon sets and follow the guidelines regarding icon usage. If you do need additional visual assets, make sure that they are high quality and consistent with GNOME’s guidelines.

%h2
  Provide quick and effective search

Search is an important design pattern in GNOME 3. People should be able to expect to be able to use search whereever it might be useful to them and for search to quickly provide the results they are looking for.

Applications that present large amounts of content, including any long list, should provide the ability to search. Make search as fast and immediate as possible, and utilise the standard search design patterns for consistency.

%h2
  Use configuration options sparingly

If you give your application a clear focus and design it around that focus, you will be able to cater to the needs of the vast majority of potential users without the need for multiple configuration options. Minimising the presence of settings in your application will make it easier to use. It will also make it easier for you to focus on providing the best quality core functionality. Remember that most people will never use settings, so it is important that your application works for them without the need for configuration.

%h2
  Use language that is familiar to your users

Always use words, phrases, and concepts that are familiar to the people who will be using your application, rather than terms from the underlying system. Use terms that relate to the tasks your application supports. For example, in medicine, the paper folder that contains all information about a specific patient is called a "chart." Hence, a medical application might refer to a patient record that contains the same information as a paper chart as a "patient chart" rather than as a "patient database record."

%h2
  Give your application an instructive name and an attractive icon

Your application’s name and icon are two of the most expressive things about it, so design them in order to communicate its function and identity.

Do not pick an application name that users will not associate with its purpose, so avoid obscure cultural references, in jokes and acronyms. Instead, make sure that people can quickly make the connection between your application’s name and what it does. Short, concise names are easier to remember and will look better in the interfaces where it is present.

Also ensure that you provide a recognisable, high-resolution application icon. This will be one of the main ways that people will recognise your application when using it in GNOME 3.

%h2
  Don’t expose users to the filesystem

Storing and retrieving content using the filesystem provides a poor user experience. It is hard work, difficult to use and is error prone. It cannot be easily tailored to the different use cases and scenarios encountered by users, and it does not work well with online integration.

Avoid letting the filesystem have an obvious presence in the design of your application. Instead, make it quick and easy for people to access the content they are interested in by using the standard GNOME 3 design patterns and by leveraging the built in GNOME 3 content services. These take the work out of finding content and will allow you to integrate with relevant online services. The GNOME 3 core applications provide examples that you can follow.

%h2
  Accommodate different types of devices

GNOME 3 is targetted at a range devices. These vary in terms of screen size and orientation and the ways in which people interact with them. Following the GNOME 3 application design patterns will allow you to produce an application that copes with these variations. Nevertheless, it is important that you evaluate your application design against requirements. In particular:

%ul
  %li
    Ensure that your application is effective on screens as small as 1024x600.
  %li
    Design for changes in screen rotation, so your application works well in both portrait and landscape views.
  %li
    Consider both touch and pointer-based input.

